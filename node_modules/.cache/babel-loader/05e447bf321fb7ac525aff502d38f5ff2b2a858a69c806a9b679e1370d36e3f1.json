{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\crypto-tracker\\\\src\\\\components\\\\CryptoRow.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register necessary components for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst formatNumber = num => num === null || num === void 0 ? void 0 : num.toLocaleString();\nconst CryptoRow = ({\n  asset\n}) => {\n  const {\n    name,\n    symbol,\n    logo,\n    price,\n    percentChange1h,\n    percentChange24h,\n    percentChange7d,\n    marketCap,\n    volume24h,\n    circulatingSupply,\n    maxSupply,\n    chartData7d\n  } = asset;\n  const formatPercent = value => /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      color: value >= 0 ? 'green' : 'red'\n    },\n    children: [value, \"%\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n\n  // Generate chart data for Last 7 Days\n  const generateChartData = data => {\n    return {\n      labels: ['Day 1', 'Day 2', 'Day 3', 'Day 4', 'Day 5', 'Day 6', 'Day 7'],\n      datasets: [{\n        label: `${name} Price Over Last 7 Days`,\n        data: data,\n        fill: false,\n        borderColor: '#4caf50',\n        // Line color\n        tension: 0.1\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", price.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: formatPercent(percentChange1h)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: formatPercent(percentChange24h)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: formatPercent(percentChange7d)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", formatNumber(marketCap)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", formatNumber(volume24h)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: formatNumber(circulatingSupply)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: maxSupply !== null && maxSupply !== void 0 ? maxSupply : '∞'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '200px',\n          height: '120px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: generateChartData(chartData7d)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = CryptoRow;\nexport default CryptoRow;\nvar _c;\n$RefreshReg$(_c, \"CryptoRow\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","formatNumber","num","toLocaleString","CryptoRow","asset","name","symbol","logo","price","percentChange1h","percentChange24h","percentChange7d","marketCap","volume24h","circulatingSupply","maxSupply","chartData7d","formatPercent","value","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","generateChartData","data","labels","datasets","label","fill","borderColor","tension","toFixed","width","height","_c","$RefreshReg$"],"sources":["C:/Users/admin/Downloads/crypto-tracker/src/components/CryptoRow.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register necessary components for Chart.js\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst formatNumber = (num) => num?.toLocaleString();\n\nconst CryptoRow = ({ asset }) => {\n  const {\n    name, symbol, logo, price, percentChange1h, percentChange24h, percentChange7d,\n    marketCap, volume24h, circulatingSupply, maxSupply, chartData7d\n  } = asset;\n\n  const formatPercent = (value) => (\n    <span style={{ color: value >= 0 ? 'green' : 'red' }}>\n      {value}%\n    </span>\n  );\n\n  // Generate chart data for Last 7 Days\n  const generateChartData = (data) => {\n    return {\n      labels: ['Day 1', 'Day 2', 'Day 3', 'Day 4', 'Day 5', 'Day 6', 'Day 7'],\n      datasets: [\n        {\n          label: `${name} Price Over Last 7 Days`,\n          data: data,\n          fill: false,\n          borderColor: '#4caf50', // Line color\n          tension: 0.1,\n        },\n      ],\n    };\n  };\n\n  return (\n    <tr>\n      <td>{logo}</td>\n      <td>{name}</td>\n      <td>{symbol}</td>\n      <td>${price.toFixed(2)}</td>\n      <td>{formatPercent(percentChange1h)}</td>\n      <td>{formatPercent(percentChange24h)}</td>\n      <td>{formatPercent(percentChange7d)}</td>\n      <td>${formatNumber(marketCap)}</td>\n      <td>${formatNumber(volume24h)}</td>\n      <td>{formatNumber(circulatingSupply)}</td>\n      <td>{maxSupply ?? '∞'}</td>\n      <td>\n        <div style={{ width: '200px', height: '120px' }}>\n          <Line data={generateChartData(chartData7d)} />\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nexport default CryptoRow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}